<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_start</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>select = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Menu Options Main Menu

/* Draws start, level select and quit buttons.
 This also assigns the menu options' positions. */
draw_sprite (spr_start, 0, x, y);
draw_sprite (spr_levelselect, 0, x + 315, y);
draw_sprite (spr_quit, 0, x + 630, y);


// Makes it so the pointer can go to the right.
if (keyboard_check_pressed(vk_right)){
select++;
}

// Makes it so the pointer can go to the left.
if (keyboard_check_pressed(vk_left)){
select--;
}

/* Makes it so the pointer can select the menu options.
 Also assigns the position of the pointer for each menu option. */

switch (select){
case 0:

obj_select_r.x = x - 70;
obj_select_l.x = x + 72;

    if (keyboard_check_pressed(vk_enter)){
        room_goto(room_intro);
    }
break;
case 1:
obj_select_r.x = x + 170;
obj_select_l.x = x + 458;

    if (keyboard_check_pressed(vk_enter)){
        room_goto(room_levelselect);            
    }
break;
case 2:
obj_select_r.x = x + 570;
obj_select_l.x = x + 690;

    if (keyboard_check_pressed(vk_enter)){
        game_end();
    }
break;
default:
    if (select &gt; 2){
        select = 0;
    } else{
        select = 0;
    }
break;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0,5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0,100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0,100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0,100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0,200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
